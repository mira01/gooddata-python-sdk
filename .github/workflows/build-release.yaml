# (C) 2022 GoodData Corporation
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Python Package and Create Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  build:
    name: Build all components
    strategy:
      matrix:
        component:
          - gooddata-afm-client
          - gooddata-metadata-client
          - gooddata-scan-client
          - gooddata-pandas
          - gooddata-fdw
          - gooddata-sdk
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build ${{ matrix.component }}
      run: |
          cd ${{ matrix.component }}
          python -m build
    - name: Persist ${{ matrix.component }} artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts_${{ matrix.component }}
        path: ${{ matrix.component }}/dist/
        if-no-files-found: error
  github_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Obtain artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist/
      - name: ls
        run: ls
      - name: pwd
        run: pwd
      - name: Create GitHub release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
                  dist/*.whl
                  dist/*.tar.gz
#  publish:
#    name: Publish components
#    runs-on: ubuntu-latest
#    needs: build
#    strategy:
#      matrix:
#        component:
#          - gooddata-afm-client
#          - gooddata-metadata-client
#          - gooddata-scan-client
#          - gooddata-pandas
#          - gooddata-fdw
#          - gooddata-sdk
#    uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#    with:
#      user: __token__
#      password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#      packages_dir: ${{ matrix.component }}/dist/
#      verbose: true
#      repository_url: https://test.pypi.org/legacy/
